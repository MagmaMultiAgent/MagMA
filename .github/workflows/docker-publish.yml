name: Docker

on:
  push:
    branches:
      - '!v0.0.2-AQ-MA'
      - '!v0.0.2-MA'
      - '!v0.0.2-MA-Eval'
      - '!main'
      - '!TDK'
      - 'alpha-CNN'
      - '!alpha-algo'
      - '!v0.0.1-CNN'
      - '!v0.0.1-CNN-mixed'
      - '!v0.0.1-action-per-unit'
      - '!v0.0.1-factory-net'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_cpu:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v2.1.1'

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta_cpu
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image (CPU)
        id: build-and-push-cpu
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_cpu.outputs.tags }}
          labels: ${{ steps.meta_cpu.outputs.labels }}
          file: Dockerfile.CPU
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image (CPU)
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta_cpu.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-cpu.outputs.digest }}
          FULCIO_ROOT: /github/workspace/fulcio_v1.crt
        run: |
          curl -sSfLo $FULCIO_ROOT https://raw.githubusercontent.com/sigstore/fulcio/main/crtfulcio_v1.crt
          for i in {1..5}; do
            echo "${TAGS}" | xargs -I {} cosign sign --yes --fulcio-url https://fulcio.sigstore.dev --fulcio-oidc-url https://oauth2.sigstore.dev/auth {}@${DIGEST} && break || sleep 10;
          done

  build_gpu:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v2.2.4'

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta_gpu
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image (GPU)
        id: build-and-push-gpu
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_gpu.outputs.tags }}
          labels: ${{ steps.meta_gpu.outputs.labels }}
          file: Dockerfile.GPU
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image (GPU)
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta_gpu.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-gpu.outputs.digest }}
          FULCIO_ROOT: /github/workspace/fulcio_v1.crt
        run: |
          curl -sSfLo $FULCIO_ROOT https://raw.githubusercontent.com/sigstore/fulcio/main/crtfulcio_v1.crt
          for i in {1..5}; do
            echo "${TAGS}" | xargs -I {} cosign sign --yes --fulcio-url https://fulcio.sigstore.dev --fulcio-oidc-url https://oauth2.sigstore.dev/auth {}@${DIGEST} && break || sleep 10;
          done
